version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: static_page_proxy_production_django
    depends_on:
      - postgres
      - redis
    volumes:
      - ./static_pages:/app/proxy/templates/proxy
      - ./static_pages/assets:/app/proxy/static
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: static_page_proxy_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: static_page_proxy_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"

  redis:
    image: redis:5.0
  awscli:
    build:
      context: .
      dockerfile: ./compose/production/aws/Dockerfile
    env_file:
      - ./.envs/.production/.django
    volumes:
      - production_postgres_data_backups:/backups

  jekyll_builder:
    image: jekyll/jekyll:latest
    volumes:
      - ./ed:/srv/jekyll
      - ./static_pages:/destination
    command: jekyll build --incremental -w -d /destination

  text_to_md:
    image: python:3
    volumes:
      - ./ed:/ed
      - ./text_to_md:/workdir
    command: python workdir/text2md.py workdir/texts workdir/csvs ed/_texts
